stages:
  - build
  - test
  - deploy

build-decode-job:
  stage: build
  image: alpine
  script:
    - echo "$SECRETS_B64" > secrets.tar.gz.b64
    - echo "$ENVS_B64" > env.tar.gz.b64

    - base64 -d secrets.tar.gz.b64 > secrets.tar.gz
    - base64 -d env.tar.gz.b64 > env.tar.gz

    - tar -xzf secrets.tar.gz .
    - tar -xzf env.tar.gz .
  artifacts:
    paths:
      - decoded_secrets/
      - decoded_envs/
    expire_in: 1 hour
  rules:
    - if: '$CI_COMMIT_BRANCH == "backend"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

build-docker-job:
  stage: build
  script:
    - mv decoded_serets/* ./
    - mv decoded_envs/* ./
    - docker build -t marketplace_pied_market .
  rules:
    - if: '$CI_COMMIT_BRANCH == "backend"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

test-job:
  stage: test
  script:
    - docker compose -f docker-compose.ci_test.yml up --build --abort-on-container-exit --exit-code-from pied_market
  rules:
    - if: '$CI_COMMIT_BRANCH == "backend"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'

deploy-job:
  stage: deploy
  script:
    - docker compose -f docker-compose.server.yml up -d
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_SOURCE == "push"'
