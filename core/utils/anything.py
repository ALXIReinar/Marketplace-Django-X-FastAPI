from dataclasses import dataclass
from pathlib import Path

methods = {
    "DELETE": "\033[91m DELETE \033[0m",
    "GET": "\033[92m GET \033[0m",
    "HEAD": "\033[92m HEAD \033[0m",
    "OPTIONS": "\033[93m OPTIONS \033[0m",
    "PATCH": "\033[94m PATCH \033[0m",
    "POST": "\033[94m POST \033[0m",
    "PUT": "\033[93m PUT \033[0m"
}

@dataclass
class Tags:
    users = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
    products = '–¢–æ–≤–∞—Ä—ã'
    elastic_products = '–¢–æ–≤–∞—Ä—ã *Elasticüîé*'

@dataclass
class Events:
    registr_user = '–Æ–∑–µ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è'
    unluck_registr_user = '–Æ–∑–µ—Ä –Ω–µ —Å–º–æ–≥ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'
    unluck_login_user = '–Æ–∑–µ—Ä –Ω–µ —Å–º–æ–≥ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç'

    white_list_url = '–ü—Ä–æ–π–¥–µ–Ω–æ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'
    long_response = '–î–æ–ª–≥–∏–π –æ—Ç–≤–µ—Ç'
    lim_requests_ip = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤"

    new_aT = "–í—ã–ø—É—â–µ–Ω –∞–∫—Å–µ—Å_—Ç–æ–∫–µ–Ω"
    fake_aT_try = "–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–º–µ–Ω—ã –∞–∫—Å–µ—Å_—Ç–æ–∫–µ–Ω–∞"
    fake_rT = '–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–º–µ–Ω—ã —Ä–µ—Ñ—Ä–µ—à_—Ç–æ–∫–µ–Ω–∞'
    fake_rT_or_exp = '–í–æ–∑–º–æ–∂–Ω–∞ –ø–æ–¥–º–µ–Ω–∞ —Ä–µ—Ñ—Ä–µ—à_—Ç–æ–∫–µ–Ω–∞/–∏—Å—Ç—ë–∫ –ø—Ä–æ—Å—Ç–æ'

    TEST = "–õ–æ–≥–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!"
    plug = ''

def hide_log_param(param, start=3, end=8):
    return param[:start] + '*' * len(param[start:-end-1]) + param[-end:]

def create_log_dirs():
    LOG_DIR = Path('logs')
    LOG_DIR.mkdir(exist_ok=True)
    (LOG_DIR / 'info_warning').mkdir(exist_ok=True, parents=True)
    (LOG_DIR / 'errors').mkdir(exist_ok=True, parents=True)

def create_debug_log_dir():
    LOG_DIR = Path('logs')
    LOG_DIR.mkdir(exist_ok=True)
    (LOG_DIR / 'debug').mkdir(exist_ok=True, parents=True)